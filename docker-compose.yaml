version: '3.9'

volumes:
  influxdb_data:
    name: influxdb_data
  timescaledb_data:
    name: timescaledb_data
  druiddb_data:
    name: druid_data
  graphitedb_data:
    name: graphitedb_data
  firebase_data:
    name: firebase_data
  mongodb_data:
    name: mongodb_data
  postgres_data:
    name: postgres_data
  cassandra_data:
    name: cassandra_data

services:
  influxdb:
    image: influxdb:1.8.3
    container_name: influxdb
    restart: always
    ports:
      - 8086:8086
    volumes:
      - influxdb_data:/var/lib/influxdb
    env_file:
      - ./.envs/.env.local
    networks:
      - databases
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/ping"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 30s
    profiles:
        - tsdb
  timescaledb:
    image: timescale/timescaledb:2.0.0-pg12
    container_name: timescaledb
    restart: always
    ports:
      - 5434:5432
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
    env_file:
      - ./.envs/.env.local
    networks:
      - databases
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 30s
    profiles:
      - tsdb
  # dolphindb:
  #   image: dolphindb/dolphindb
  #   container_name: dolphindb
  #   restart: always
  #   ports:
  #     - 8848:8848
  #   volumes:
  #     - dolphindb_data:/opt/dolphindb/data
  #   env_file:
  #     - ./.envs/.env.local
  #   networks:
  #     - databases
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8848"]
  #     interval: 1m
  #     timeout: 10s
  #     retries: 3
  #     start_period: 30s
  #   profiles:
  #     - tsdb
  druiddb: 
    image: apache/druid:0.20.0
    container_name: druiddb
    restart: always
    ports:
      - 8082:8082
    volumes:
      - druiddb_data:/opt/druid/var
    env_file:
      - ./.envs/.env.local
    networks:
      - databases
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 30s
    profiles:
      - tsdb
  graphitedb:
    image: sitespeedio/graphite
    container_name: graphitedb
    restart: always
    ports:
      - 2003:2003
      - 2004:2004
      - 7002:7002
      - 8080:80
    volumes:
      - graphitedb_data:/opt/graphite/storage/whisper
    env_file:
      - ./.envs/.env.local
    networks:
      - databases
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 30s
    profiles:
      - tsdb
  firebase:
    image: firebase/firebase-tools
    container_name: firebase
    restart: always
    ports:
      - 9005:9005
    volumes:
      - firebase_data:/home/node/.cache/firebase
    env_file:
      - ./.envs/.env.local
    networks:
      - databases
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9005"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 30s
    profiles:
      - nosql
      - regular_db
  mongodb:
    image: mongo:4.4.4
    container_name: mongodb
    restart: always
    ports:
      - 27017:27017
    volumes:
      - mongodb_data:/data/db
    env_file:
      - ./.envs/.env.local
    networks:
      - databases
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:27017"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 30s
    profiles:
      - nosql
      - regular_db
  postgres:
    image: postgres:13.2
    container_name: postgres
    restart: always
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.envs/.env.local
    networks:
      - databases
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 30s
    profiles:
      - sql
      - regular_db
  cassandra:
    image: cassandra:3.11.10
    container_name: cassandra
    restart: always
    ports:
      - 9042:9042
    volumes:
      - cassandra_data:/var/lib/cassandra
    env_file:
      - ./.envs/.env.local
    networks:
      - databases
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9042"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 30s
    profiles:
      - nosql
      - regular_db
networks:
  databases:
    name: databases
    driver: bridge
      